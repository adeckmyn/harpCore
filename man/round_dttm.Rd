% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date_time.R
\name{round_dttm}
\alias{round_dttm}
\title{Round date-times to defined multiples}
\usage{
round_dttm(dttm, rounding, direction = "nearest", offset = 0)
}
\arguments{
\item{dttm}{A vector of POSIXct date-times.}

\item{rounding}{The multiple to which to round date-times. This
should be a number followed "s", "m", "h", or "d" for seconds, minutes,
hours and days.}

\item{direction}{The direction in which to round date-times. Can be
"nearest", "up" or "down". For "nearest", the rounding is centred on
\code{rounding}. Where there is an even number of date-times to be
aggregated, the averaging window favours date-times before the rounding
time. For example, if rounding date-times to "6h", the aggregation for 06
UTC will take in 03, 04, 05, 06, 07 and 08 UTC, and the aggregation for 12
UTC will take in 09, 10, 11, 12, 13 and 14 UTC etc. For "up" the rounding
is for a window for all times up to and including \code{rounding} and for
"down" the rounding is for a window starting at \code{rounding}.}

\item{offset}{The offset to be applied to \code{rounding}. This
should be a number followed "s", "m", "h", or "d" for seconds, minutes,
hours and days. This is used to centre the rounding. For example, if
\code{rounding} = "1d", the rounding will be centred on 00 UTC. If you want
it to be centred on 12 UTC, you would supply an offset of "12h". Note that
the offset is applied backwards in time, so if you want to centre on 06
UTC, for example, the offset should be "18h".}
}
\value{
A POSIXct vector of the same length as \code{dttm} with rounded
date-times.
}
\description{
\code{round_dttm()} takes a vector of POSIXct date-times and rounds them to
prescribed multiples. Date-times can be rounded to the nearest multiple, or
up or down. Additionally, an offset can be applied.
}
\examples{
my_dttm <- data.frame(dttm = as_dttm(seq_dttm(2024010100, 2024010223)))

# Round to the nearest 6h - note that 06 UTC includes 03, 04, 05, 06, 07 and
# 08 UTC
my_dttm$rounded <- round_dttm(my_dttm$dttm, "6h")
my_dttm

# Round up to the nearest 6h
my_dttm$rounded <- round_dttm(my_dttm$dttm, "6h", "up")
my_dttm

# Round to the nearest day - note centring on 00 UTC
my_dttm$rounded <- round_dttm(my_dttm$dttm, "1d")
my_dttm

# Centre 1 day rounding on 12 UTC
my_dttm$rounded <- round_dttm(my_dttm$dttm, "1d", offset = "12h")
my_dttm
}
