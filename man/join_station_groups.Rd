% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/harp_df_list.R
\name{join_station_groups}
\alias{join_station_groups}
\title{Join station groups to a point forecast data frame or \code{harp_list}}
\usage{
join_station_groups(
  .fcst,
  group_df = getExportedValue("harpCore", "station_groups"),
  group_col = "station_group"
)
}
\arguments{
\item{group_df}{a data frame with a column that is common to \code{.fcst} that
uniquely identifies a station, and a column for the group name.}

\item{group_col}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> The name of the
column in \code{group_df} that contains the name of the station group.}
}
\value{
An object of the same class as \code{.fcst} with a column for station
group
}
\description{
\code{join_station_groups} adds a column to a \code{harp_det_point_df} or
\code{harp_ens_point_df} data frame to signify what group a station (SID) belongs
in. This column can then be used as a grouping column in verification
functions. By default, the built in station group data \code{station_groups} is
used, but any data frame with a common column with the forecast data that
uniquely identifies a station can be used.
}
\details{
It should be noted that where stations fall into more than one group, an
extra row of data is created for each group. This may have implications for
memory, so it could be wiser to filter the data for individual station
groups prior to running any harp verification function.
}
\examples{
join_station_groups(det_point_df)

# Note the increase in the number of rows
nrow(det_point_df)
nrow(join_station_groups(det_point_df))

# Use custom groups
grps <- data.frame(
  SID = c(1001, 1001, 1002, 1002, 1002),
  letter = c("A", "B", "A", "C", "D")
)
join_station_groups(det_point_df, grps, letter)

# Where a station is not in a group it gets the value "None" (note also the
# use of tidy selection)
ll <- "letter"
grps <- data.frame(
  SID = 1002,
  letter = "A"
)
join_station_groups(det_point_df, grps, {{ll}})
}
